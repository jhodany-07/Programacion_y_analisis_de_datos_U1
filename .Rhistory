View(ger_garbanzo)
ger_garbanzo
attach(ger_garbanzo)
names(ger_garbanzo)
class(%G)
class(Sustrato)
class(Tratamiento)
class(d1)
class(S.G)
class(%G)
View(fb)
library(readxl)
ger_garbanzo <- read_excel("C:/Users/JHODANY/Downloads/ger_garbanzo.xlsx")
View(ger_garbanzo)
View(tsv)
library(readxl)
ger_garbanzo <- read_excel("C:/Users/JHODANY/Downloads/ger_garbanzo.xlsx")
View(ger_garbanzo)
attach(ger_garbanzo)
names(ger_garbanzo)
class(Sustrato)
class(Tratamiento)
class(d1)
class(S.G)
class(P.G)
factor(Sustrato)
summary(ger_garbanzo)
boxplot(P.G-sustrato)
boxplot(P.G=sustrato)
boxplot(P.G=Sustrato)
boxplot(P.G-Sustrato)
boxplot(P.G)
boxplot(P.G~Sustrato)
aov(P.G~Sustrato)
anova1=aov(P.G~Sustrato)
summary(anova1)
TukeyHSD(anova1)
class(Tratamiento)
factor(Tratamiento)
boxplot(Tratamiento~Sustrato)
boxplot(P.G~Tratamiento)
anova1=aov(P.G~Tratamiento)
summary(anova1)
TukeyHSD(anova1)
plot(anova1,type="l",main = "Germinacion de Grabanzo")
plot(anova1,main = "Germinación de Garbanzo")
library(readxl)
Hoja_de_Evaluación_Trabajo_Unidad_1 <- read_excel("C:/Users/JHODANY/Downloads/Hoja de Evaluación - Trabajo Unidad 1.xlsx")
View(Hoja_de_Evaluación_Trabajo_Unidad_1)
library(readxl)
Evaluación_incidencia_severidad <- read_excel("C:/Users/JHODANY/Downloads/Evaluación_incidencia_severidad.xlsx")
View(Evaluación_incidencia_severidad)
attach(Evaluación_incidencia_severidad)
names(Evaluación_incidencia_severidad)
class(Tratamiento)
class(Incidencia_11d)
factor(Tratamiento)
summary(Evaluación_incidencia_severidad)
boxplot(Tratamiento~Severidad_14d)
boxplot(Severidad_14d~Tratamiento)
aov(Severidad_14d~Tratamiento)
anova1=aov(Severidad_14d~Tratamiento)
summary(anova1)
TukeyHSD(anova1)
plot(Evaluación_incidencia_severidad)
ggplot(data = tablar2,aes(x=Incidencia_11d(%),y=Tratamiento,color=incidencia))+
ggplot(Evaluación_incidencia_severidad = tablar2,aes(x=Incidencia_11d(%),y=Tratamiento,color=incidencia))+
ggplot(Evaluación_incidencia_severidad = tablar2,aes(x=Incidencia_11d,y=Tratamiento,color=incidencia))+
geom_line()+
geom_point()+
facet_wrap(~"Evolución del sueldo promedio de acuerdo a lo años de estudio")
hist(Evaluación_incidencia_severidad, nclass = 4, probability = TRUE)
source("~/.active-rstudio-document", echo=TRUE)
summary(Severidad_11d)
boxplot(Severidad_11d:Incidencia_11d~Tratamiento)
boxplot(Incidencia_11d~Tratamiento)
qqplot(Severidad_11d,Tratamiento,plot=TRUE)
qqplot(Severidad_11d,Tratamiento,plot.it = Evaluación_incidencia_severidad)
qqplot(Severidad_11d,Tratamiento,plot.it = TRUE)
lines(Tratamiento,Severidad_11d,type = "Porcentaje de Severidad")
lines(Tratamiento,Severidad_11d,type = "porcentaje de severidad")
lines(xy.coords(Tratamiento,Severidad_11d),type = "porcentaje de severidad")
lines(coords(Tratamiento,Severidad_11d),type = "porcentaje de severidad")
lines(coords(Severidad_11d,Tratamiento),type = "porcentaje de severidad")
View(anova1)
ggplot
ggpl
(datos, aes(x = Tratamiento, y = Incidencia_11d)) +
geom_boxpl
install.packages("agricolae")
library(agricolae)
dosis <- (0,50,100)
dosis <- c(0,50,100)
repeticiones <- 5
#Definir los niveles de la dosis de fertilización
dosis <- c(0, 50, 100)
# Número de repeticiones
repeticiones <- 5
# Generar el diseño completamente al azar
dca <- design.crd(trt = dosis,r = repeticiones,serie = 1,seed = 123)
# Mostrar el diseño generado
print(dca$book)
#visualizar la estructura del diseño
dcr$book
#visualizar la estructura del diseño
dca$book
# Generar el diseño completamente al azar
dca <- design.crd(trt = dosis,r = repeticiones,seed = 123)
# Mostrar el diseño generado
print(dca$book)
# DBCA --------------------------------------------------------------------
# Definir los niveles de los factores
dosis <- c(0, 50, 100)
cultiv<- c("Peruanita", "Canchan")  # Factor 2: Cultivares de papa
cultivares
cultivares <- c("Peruanita", "Canchan")
# Número de repeticiones
repeticiones <- 4
# Generar el diseño de bloques completamente al azar
dbca<- design.ab(trt = interaction(dosis, cultivares),r= repeticiones,block = 1,seed = 123)
# Generar el diseño de bloques completamente al azar
dbca<- design.ab(trt = interaction(dosis, cultivares),r= repeticiones,block =1,seed = 123)
# Generar el diseño de bloques completamente al azar
dbca <- design.ab(trt = interaction(dosis, cultivares),r= repeticiones,block =1,seed = 123)
# DBCA --------------------------------------------------------------------
# Definir los niveles de los factores
dosis <- c(0, 50, 100)
cultivares <- c("Peruanita", "Canchan")
# Número de repeticiones
repeticiones <- 4
dosis <- c(0, 50, 100)
cultivares <- c("Peruanita", "Canchan")
repeticiones <- 4
dbca <- design.ab(trt = interaction(dosis, cultivares),r= repeticiones,block =1,seed = 123)
dbca <- design.ab(trt = interaction(dosis,cultivares),r=repeticiones,block =1,seed = 123)
dbca <- design.ab(trt = interaction(dosis,cultivares),r=repeticiones,seed = 123)
dbca <- design.ab(trt = interaction(dosis,cultivares),r = repeticiones, serie =1,seed = 123)
dbca <- design.ab(trt = = interaction(dosis, cultivares),r = repeticiones,block= 1,= 123)
dbca <- design.ab(trt = interaction(dosis, cultivares),r = repeticiones,block= 1,= 123)
dbca <- design.ab(trt = interaction(dosis,cultivares),r = repeticiones,block= 1,= 123)
# Definir los niveles de los factores
dosis <- c(0, 50, 100)                # Factor 1: Dosis de fertilización nitrogenada
cultivares <- c("Peruanita", "Canchan")  # Factor 2: Cultivares de papa
# Número de repeticiones
repeticiones <- 4
# Crear las combinaciones factoriales (tratamientos)
tratamientos <- expand.grid(Dosis = dosis, Cultivar = cultivares)
# Generar el diseño de bloques completamente al azar
dbca <- design.rcbd(
trt = tratamientos,  # Combinación de tratamientos (dosis y cultivares)
r = repeticiones,    # Número de repeticiones
seed = 123,          # Fijar semilla para reproducibilidad
serie = 1            # Numeración de las parcelas
)
# Generar el diseño de bloques completamente al azar
dbca <- design.rcbd(trt = tratamientos,r = repeticiones,seed = 123,serie = 1)
dosis <- c(0, 50, 100)                # Factor 1: Dosis de fertilización nitrogenada
cultivares <- c("Peruanita", "Canchan")  # Factor 2: Cultivares de papa
repeticiones <- 4
tratamientos <- expand.grid(Dosis = dosis, Cultivar = cultivares)
# Generar el diseño de bloques completamente al azar
dbca <- design.rcbd(trt = tratamientos,r = repeticiones,seed = 123,serie = 1)
# DBCA --------------------------------------------------------------------
# Definir los factores
fertilizacion <- c(0, 50, 100)  # Dosis de fertilización nitrogenada (kg/ha)
cultivares <- c("Peruanita", "Canchan")  # Cultivares de papa
# Crear una combinación de todos los tratamientos
tratamientos <- expand.grid(Fertilizacion = fertilizacion, Cultivar = cultivares)
# Definir el número de bloques (repeticiones)
repeticiones <- 4
# Crear el diseño en bloques completamente al azar (DBCA)
diseño_dbca <- design.ab(rcbd, treatments=list(fertilizacion, cultivares), r=repeticiones, serie=2)
# Mostrar el diseño experimental
print(diseño_dbca$book)
# Graficar el diseño experimental
plot(diseño_dbca)
install.packages("bookdown")
bookdown:::mathquill()
##formulas matematicas
Esta es una formula cualquiera$$\frac{\left(2x-1\right)^2-1}{4}=4
##formulas matematicas
Esta es una formula cualquiera$$\frac{\left(2x-1\right)^2-1}{4}=4
bookdown:::mathquill()
library(readxl)
LA_MOLINA_2014_POTATO_WUE_FB_1_ <- read_excel("LA MOLINA 2014 POTATO WUE (FB) (2).xlsx")
LA_MOLINA_2014_POTATO_WUE_FB_1_ <- read_excel("LA MOLINA 2014 POTATO WUE (FB) (1).xlsx")
View(LA_MOLINA_2014_POTATO_WUE_FB_1_)
library(openxlsx)
dtxlsx <- openxlsx::read.xlsx(xlsxFile = "Data/LA MOLINA 2014 POTATO WUE (FB).xlsx",sheet = "fb")
View(LA_MOLINA_2014_POTATO_WUE_FB_1_)
View(dtxlsx)
library(openxlsx)
dtxlsx <- openxlsx::read.xlsx(xlsxFile = "Data/LA MOLINA 2014 POTATO WUE (FB).xlsx",sheet = "fb")
library(openxlsx)
dtxlsx <- openxlsx::read.xlsx(xlsxFile = "Data/LA MOLINA 2014 POTATO WUE (FB).xlsx",sheet = "fb")
library(openxlsx)
dtxlsx <- openxlsx::read.xlsx(xlsxFile = "Data/LA MOLINA 2014 POTATO WUE (FB).xlsx",sheet = "fb")
library(openxlsx)
dtxlsx <- openxlsx::read.xlsx(xlsxFile = "Data/LA MOLINA 2014 POTATO WUE (FB).xlsx",sheet = "fb")
library(openxlsx) dtxlsx \<- openxlsx::read.xlsx(xlsxFile = "Data/LA MOLINA 2014 POTATO WUE (FB).xlsx",sheet = "fb")
library(openxlsx)
dtxlsx \<- openxlsx::read.xlsx(xlsxFile = "Data/LA MOLINA 2014 POTATO WUE (FB).xlsx",sheet = "fb")
fb <- gs %>%
reanch_read(fb)
fb <- gs %>%
range_read(fb)
fb <- gs %>%
range_read(fb)
## Modelo lineal (ANOVA)
av <- aov()
fb <- gs %>%
range_read(fb)
fb <- gs %>%
range_read(fb)
library(openxlsx)
dtxlsx <- openxlsx::read.xlsx(xlsxFile = "Data/LA MOLINA 2014 POTATO WUE (FB).xlsx",sheet = "fb")
fb <- gs %>%
range_read(fb)
fb <- gs
range_read(fb)
fb <- gs %>%
range_read(fb)
fb <- gs %>%
range_read(fb)
fb <- gs %>%
range_read(fb)
fb <- gs %>% + range_read(fb)
fb <- gs %>%+range_read(fb)
fb <- gs %>%
range_read(fb)
fb <- gs %>%
range_read(fb)
gs <- url %>%
as_sheets_id()
gs <- dtxlsx %>%
as_sheets_id()
gs <- dtxlsx%>%
as_sheets_id()
library(inti)
library(googlesheets4)
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=1263018298#gid=1263018298"
gs <- as_sheets_id(url)
fb <- googlesheets4::range_read(ss = gs,sheet = "fb")
View(fb)
gs <- dtxlsx%>%
as_sheets_id()
gs <- dtxlsx%>%
as_sheets_id()
gs <- dtxlsx%>%
as_sheets_id(fb)
fb <- gs %>%
range_read("fb")
str(fb)
modelo <- aov(formula = lfa ~  bloque + riego + geno + riego*geno
, data = fb)
anova(modelo)
plot(modelo)
y = "Area Folicar (cm^2)")
ggplot(fb, aes(x = geno, y = lfa, colour = riego)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción Riego y Genotipo",
y = "Area Foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas del eje X
library(openxlsx)
dtxlsx <- openxlsx::read.xlsx(xlsxFile = "Data/LA MOLINA 2014 POTATO WUE (FB).xlsx",sheet = "fb")
av <- aov()
View(dtxlsx)
library(inti)
library(googlesheets4)
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=1263018298#gid=1263018298"
gs <- as_sheets_id(url)
fb <- googlesheets4::range_read(ss = gs,sheet = "fb")
modelo <- aov(formula = lfa ~  bloque + riego + geno + riego*geno
, data = fb)
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=1263018298#gid=1263018298"
gs <- as_sheets_id(url)
fb <- googlesheets4::range_read(ss = gs,sheet = "fb")
gs <- dtxlsx%>%
as_sheets_id(fb)
View(fb)
fb <- gs %>%
range_read("fb")
str(fb)
```{r}
modelo <- aov(formula = lfa ~  bloque + riego + geno + riego*geno
, data = fb)
anova(modelo)
plot(modelo)
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción Riego y Genotipo",
y = "Area Foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas del eje X
# Comparación de medias  --------------------------------------------------
library(agricolae)
print(tukey_riego)
# Comparación de medias  --------------------------------------------------
library(agricolae)
tukey_result <- HSD.test(modelo, "riego", group=TRUE)
print(tukey_riego)
print(tukey_result)
plot(tukey_riego)
plot(tukey_result)
tukey_geno <- HSD.test(modelo, "geno", group=TRUE)
print(tukey_geno)
tukey_interaccion <- HSD.test(modelo, c("riego", "geno"), group=TRUE)
print(tukey_interaccion)
plot(tukey_interaccion)
str(tukey_interaccion)
tukey_interaccion
tukey_result
tukey_result <- HSD.test(modelo, "geno", group=TRUE)
print(tukey_result)
tukey_result <- HSD.test(modelo, c("riego", "geno"), group=TRUE)
print(tukey_result)
plot(tukey_result)
str(tukey_result)
tukey_result
grupos <- tukey_result$groups
View(grupos)
str(grupos)
tukey_result <- HSD.test(modelo, "geno", group=TRUE)
View(grupos)
format:
html:
toc: true
toc-location: left
---
title: "Programacion"
toc-location: left
number-sections: true
grupos <- tukey_result$groups %>% rowneans_to_column("tratamientos")
grupos <- tukey_result$groups
grupos <- tukey_result
# Comparación de medias  --------------------------------------------------
library(agricolae)
tukey_result <- HSD.test(modelo, "riego", group=TRUE)
library(inti)
library(googlesheets4)
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=1263018298#gid=1263018298"
gs <- as_sheets_id(url)
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=1263018298#gid=1263018298"
gs <- as_sheets_id(url)
library(inti)
library(googlesheets4)
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=1263018298#gid=1263018298"
gs <- as_sheets_id(url)
fb <- gs %>%
range_read("fb")
str(fb)
```{r}
modelo <- aov(formula = lfa ~  bloque + riego + geno + riego*geno
, data = fb)
View(fb)
anova(modelo)
plot(modelo)
ggplot(fb, aes(x = geno, y = lfa, colour = riego)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción Riego y Genotipo",
y = "Area Foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas del eje X
# Comparación de medias  --------------------------------------------------
library(agricolae)
tukey_result <- HSD.test(modelo, "riego", group=TRUE)
print(tukey_result)
plot(tukey_result)
tukey_result <- HSD.test(modelo, "geno", group=TRUE)
print(tukey_result)
tukey_result <- HSD.test(modelo, c("riego", "geno"), group=TRUE)
print(tukey_result)
plot(tukey_result)
str(tukey_result)
tukey_result
grupos <- tukey_result
str(grupos)
grupos <- tukey_result$groups
grupos <- tukey_result$groups %>% rownames_to_column("tratamientos")
%>% separate(tratamientos, into = c("geno","riego"),sep = ":")
separate(tratamientos, into = c("geno","riego"),sep = ":")
grupos <- tukey_result$groups %>% rownames_to_column("tratamientos")
grupos <- tukey_result$groups %>% rownames_to_column("tratamientos") %>% separate(tratamientos, into = c("geno","riego"),sep = ":")
str(grupos)
View(grupos)
ggtitle("Gráfico de barras: LFA por genotipo y riego")
ggplot(grupos, aes(x = geno, y = 1fa, fill - riego)) +
ggplot(grupos, aes(x = geno, y = 1fa, fill = riego)) +
ggplot(grupos, aes(x = geno, y = 1fa, fill = riego)) + geom bar(stat = "identity", position = "dodge", color ="black") +
library(ggplot2)
ggplot(grupos, aes(x = geno, y = 1fa, fill = riego)) + geom bar(stat = "identity", position = "dodge", color ="black") +
library(ggplot)
ggplot
ggplot(grupos, aes(x = interaction(geno, riego), y = mean)) +
geom_bar(stat = "identity", fill = "steelblue", color = "black") + # Gráfico de barras
geom_text(aes(label = groups), vjust = -0.5) +  # Agregar las letras de los grupos Tukey
labs(x = "Tratamientos (Genotipo y Riego)", y = "Media", title = "Comparación de medias con Tukey") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(grupos, aes(x = interaction(geno, riego), y = mean)) +
geom_bar(stat = "identity", fill = "steelblue", color = "black") + # Gráfico de barras
geom_text(aes(label = groups), vjust = -0.5) +  # Agregar las letras de los grupos Tukey
labs(x = "Genotipo", y ="LFA",fill ="Riego") + theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + ggtitle("Grafico de barras: LFA por genotipo y riego")
ggplot(grupos, aes(x = geno, y = 1fa, fill = riego)) + geom bar(stat = "identity", position = "dodge", color ="black") +
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) + geom bar(stat = "identity", position = "dodge", color ="black") +
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) + geom_bar(stat = "identity", position = "dodge", color ="black") +
labs (x = "Genotipo", y = "LFA", fi11 = "Riego") +
theme_minimal()+
theme (axis.text.x = element_text(angle = 45, hjust = 1)) + ggtitle("Gráfico de barras: LFA por genotipo y riego")
ggplot(grupos, aes(x = geno, y = lfa, fill = riego) +
geom_text(aes(label = groups), vjust = -0.5) +  # Agregar las letras de los grupos Tukey
format:
html:
toc: true
toc-location: left
# Modelo Lineal (ANOVA)
## Importar datos
library(inti)
library(googlesheets4)
```{r}
# Modelo Lineal (ANOVA)
## Importar datos
library(inti)
library(googlesheets4)
```{r}
source('https://inkaverse.com/setup.r')
c
source('https://inkaverse.com/setup.r')
# Modelo Lineal (ANOVA)
## Importar datos
library(inti)
library(googlesheets4)
```{r}
# Modelo Lineal (ANOVA)
## Importar datos
library(inti)
library(googlesheets4)
```{r}
# Modelo Lineal (ANOVA)
## Importar datos
library(inti)
library(googlesheets4)
```{r}
source('https://inkaverse.com/setup.r')
# Modelo Lineal (ANOVA)
## Importar datos
library(inti)
library(googlesheets4)
```{
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=1263018298#gid=1263018298"
gs <- url %>%
as_sheets_id()
gs <- url %>%
as_sheets_id()
fb <- gs %>%
range_read("fb")
fb <- gs %>%
range_read("fb")
str(fb)
View(fb)
modelo <- aov(formula = lfa ~  bloque + riego + geno + riego*geno
, data = fb)
anova(modelo)
plot(modelo)
ggplot(fb, aes(x = geno, y = lfa, colour = riego)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción Riego y Genotipo",
y = "Area Foliar (cm^2)")
ggplot(fb, aes(x = geno, y = lfa, colour = riego)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción Riego y Genotipo",
y = "Area Foliar (cm^2)")
ggplot(fb, aes(x = geno, y = lfa, colour = riego)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción Riego y Genotipo",
y = "Area Foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas del eje X
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas del eje X
library(agricolae)
tukey_result <- HSD.test(modelo, "riego", group=TRUE)
print(tukey_result)
plot(tukey_result)
tukey_result <- HSD.test(modelo, "geno", group=TRUE)
print(tukey_result)
tukey_result <- HSD.test(modelo, c("riego", "geno"), group=TRUE)
print(tukey_result)
plot(tukey_result)
str(tukey_result)
tukey_result
grupos <- tukey_result
str(grupos)
library(ggplot2)
library(ggplot)
grupos <- tukey_result$groups %>% rownames_to_column("tratamientos") %>% separate(tratamientos, into = c("geno","riego"),sep = ":")
str(grupos)
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) + geom_bar(stat = "identity", position = "dodge", color ="black") +
labs (x = "Genotipo", y = "LFA", fi11 = "Riego") +
theme_minimal()+
theme (axis.text.x = element_text(angle = 45, hjust = 1)) + ggtitle("Gráfico de barras: LFA por genotipo y riego")
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) + geom_bar(stat = "identity", position = "dodge", color ="black") +
labs (x = "Genotipo", y = "LFA", fi11 = "Riego") +
theme_minimal()+
theme (axis.text.x = element_text(angle = 45, hjust = 1)) + ggtitle("Gráfico de barras: LFA por genotipo y riego")
---
title:"Análisis_Datos"
